<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Writings on Reid Mitchell</title><link>https://reidmit.com/writing/</link><description>Recent content in Writings on Reid Mitchell</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 01 Oct 2018 12:23:47 +0000</lastBuildDate><atom:link href="https://reidmit.com/writing/index.xml" rel="self" type="application/rss+xml"/><item><title>Asyncronous coffee-making with JavaScript</title><link>https://reidmit.com/writing/asynchronous-coffee-making-with-javascript/</link><pubDate>Mon, 01 Oct 2018 12:23:47 +0000</pubDate><guid>https://reidmit.com/writing/asynchronous-coffee-making-with-javascript/</guid><description>Asynchronous programming comes up a lot when you hear about JavaScript. You may have heard about callbacks, promises, or async/await. These were things that took me a long time to grasp. Even well into writing JavaScript every day at my job, I wasn&amp;rsquo;t fully comfortable with my understanding. In this post, I want to share how I&amp;rsquo;ve learned to think about asynchronous programming: what it means, why it&amp;rsquo;s useful, and how it&amp;rsquo;s implemented in JavaScript.</description></item><item><title>Wrapping your head around recursion</title><link>https://reidmit.com/writing/wrapping-your-head-around-recursion/</link><pubDate>Wed, 15 Nov 2017 05:17:36 +0000</pubDate><guid>https://reidmit.com/writing/wrapping-your-head-around-recursion/</guid><description>Let&amp;rsquo;s start with an analogy.
Imagine you&amp;rsquo;re standing in a long line of people waiting for something on a very foggy day. It&amp;rsquo;s so foggy that nobody in line can see further than one person ahead of them and one person behind them. You certainly can&amp;rsquo;t see the beginning of the line. But you&amp;rsquo;re growing impatient, so you would like to know your position in the line. Are you 5thor 500th?</description></item><item><title>How I built this site</title><link>https://reidmit.com/writing/how-i-built-this-site/</link><pubDate>Sun, 08 Oct 2017 15:21:51 -0700</pubDate><guid>https://reidmit.com/writing/how-i-built-this-site/</guid><description>I&amp;rsquo;m fascinated by the different technologies, languages, and methods people use to build websites. When I see a website I admire, I often spend time digging to see how it was built. So, I wanted to share the details behind how this site is made.
There are tons of great options out there for this kind of thing, all with different strengths: Wordpress, Jekyll, Hexo, Gatsby, to name just a few.</description></item><item><title>A new website (finally!)</title><link>https://reidmit.com/writing/a-new-website/</link><pubDate>Sat, 07 Oct 2017 05:17:36 +0000</pubDate><guid>https://reidmit.com/writing/a-new-website/</guid><description>Welcome to my new website!
After several years of designing and redesigning, building and rebuilding, deleting and recreating my personal website an absurd number of times (30?), all without ever putting any real content on it, I have decided that enough is enough. I&amp;rsquo;m settling on a simple design and an easy-to-use framework for building the site (more on that in this post!), so I can focus on what should really be the most important thing: the content.</description></item></channel></rss>