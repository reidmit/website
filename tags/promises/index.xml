<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>promises on Reid Mitchell</title><link>https://reidmit.com/tags/promises/</link><description>Recent content in promises on Reid Mitchell</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 01 Oct 2018 12:23:47 +0000</lastBuildDate><atom:link href="https://reidmit.com/tags/promises/index.xml" rel="self" type="application/rss+xml"/><item><title>Asyncronous coffee-making with JavaScript</title><link>https://reidmit.com/writing/asynchronous-coffee-making-with-javascript/</link><pubDate>Mon, 01 Oct 2018 12:23:47 +0000</pubDate><guid>https://reidmit.com/writing/asynchronous-coffee-making-with-javascript/</guid><description>Asynchronous programming comes up a lot when you hear about JavaScript. You may have heard about callbacks, promises, or async/await. These were things that took me a long time to grasp. Even well into writing JavaScript every day at my job, I wasn&amp;rsquo;t fully comfortable with my understanding. In this post, I want to share how I&amp;rsquo;ve learned to think about asynchronous programming: what it means, why it&amp;rsquo;s useful, and how it&amp;rsquo;s implemented in JavaScript.</description></item></channel></rss>